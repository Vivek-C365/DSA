#include<iostream>
using namespace std;
//pre-defined size
#define SIZE 5
class doublequeue {
   int array[20],front,rear;
   public:
      doublequeue();
      void front_insert(int);
      void front_delete();
      void rear_insert(int);
      void rear_delete();
      void show_list();
};
doublequeue::doublequeue() {
    //predefined numbers front and rear
   front=-1;
   rear=-1;
}
void doublequeue::show_list(){
    if(front==-1){
        cout<<"queue is empty"<<endl;
    }
    else{
        for(int i=front; i<=rear; i++){
            cout<<array[i]<<endl;
        }
    }
}
void doublequeue::front_insert(int i) {
   if(front==-1) {
      front=0;
      array[++rear]=i;
      
   } else if(front!=0) {
      array[--front]=i;
      
   } else {
      cout<<"overflow from front";
   }
}
void doublequeue::rear_insert(int i) {
   if(rear>=SIZE-1) {
      cout<<"overflow from rear";
   } else {
     
      if(front==-1) {
         front++;
         rear++;
      } else {
         rear=rear+1;
      }
      array[rear]=i;
   }
}

void doublequeue::front_delete() {
   if(front==-1) {
      cout<<"doublequeue is empty"<<endl;
      return;
   }
   else {
     cout<<"deleted number from front is"<<array[front]<<endl;
      if(front==rear) {
         front=rear=-1;
         return;
      } else
         front=front+1;
      }
   }
   void doublequeue::rear_delete() {
      if(front==-1) {
         cout<<"doublequeue is empty"<<endl;
         return;
      }
      else {
        cout<<"deleted number from rear  is"<<array[rear]<<endl;
         if(front==rear) {
            front=rear=-1;
         } else{
            rear=rear-1;
      }
   }
}
   
   int main() 
   {
      int c,i;
      doublequeue d;
      do{
      cout<<"type --1-- insert at front"<<endl;
      cout<<"type --2-- insert at rear"<<endl;
      cout<<"type --3-- delete at front"<<endl;
      cout<<"type --4-- delete at rear"<<endl;
      cout<<"type --5-- show numbers" <<endl;
      cout<<"type --6-- exit"<<endl;
      
      
      cout<<"enter number to run task"<<endl;
      cin>>c;
      
      
      
      switch(c) {
         case 1:
            cout<<"enter value to insert at front"<<endl;
            cin>>i;
            d.front_insert(i);
         break;
         case 2:
            cout<<"enter value to insert at rear"<<endl;
            cin>>i;
            d.rear_insert(i);
         break;
         case 3:
          d.front_delete();
         break;
         case 4:
            d.rear_delete();
         break;
         case 5:
         d.show_list();
         break;
         case 6:
            return 0;
         break;
         
      }
         
       }while(c!='6');
      }
    
